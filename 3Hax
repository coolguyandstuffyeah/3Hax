-- Check

if game.CoreGui:FindFirstChild("3Hax") then

	for _, Frame in game.CoreGui:FindFirstChild("3Hax"):GetChildren() do

		if Frame:IsA("Frame") then

			game.TweenService:Create(Frame,TweenInfo.new(0.3),{Size = UDim2.new(0,0,0,0)}):Play()

		end

	end

	wait(0.3)

	game.CoreGui:FindFirstChild("3Hax"):Destroy()

	wait(0.3)

end

-- Gui

local UI = Instance.new("ScreenGui", game.CoreGui)

UI.Name = "3Hax"
UI.IgnoreGuiInset = true
UI.DisplayOrder = 1999999999
UI.ResetOnSpawn = false

local Background = Instance.new("Frame", UI)

Background.BackgroundColor3 = Color3.new(0, 0, 0)
Background.BackgroundTransparency = 0.5
Background.Name = "Background"
Background.Position = UDim2.new(0.63, 0, 0.52, 0)
Background.Size = UDim2.new(0,0,0,0)

local Corner = Instance.new("UICorner", Background)

Corner.CornerRadius = UDim.new(0.05,0)

local Stroke = Instance.new("UIStroke", Background)

Stroke.Thickness = 2
Stroke.Color = Color3.new(1,1,1)

local Title = Instance.new("TextLabel", Background)

Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.BorderColor3 = Color3.new(0, 0, 0)
Title.BorderSizePixel = 0
Title.Font = Enum.Font.TitilliumWeb
Title.Name = "Title"
Title.Size = UDim2.new(1, 0, 0.11, 0)
Title.Text = "3Hax"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextScaled = true
Title.TextSize = 14
Title.TextStrokeTransparency = 0
Title.TextWrapped = true

local Split = Instance.new("Frame", Background)

Split.BackgroundColor3 = Color3.new(1, 1, 1)
Split.BackgroundTransparency = 0
Split.BorderSizePixel = 0
Split.Name = "Split"
Split.Position = UDim2.new(0.032, 0,0.109, 0)
Split.Size = UDim2.new(0.935, 0,0, 1)

local Scroll = Instance.new("ScrollingFrame", Background)

Scroll.Active = true
Scroll.BackgroundColor3 = Color3.new(1, 1, 1)
Scroll.BackgroundTransparency = 1
Scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
Scroll.Name = "Scroll"
Scroll.Position = UDim2.new(0.065, 0, 0.16, 0)
Scroll.ScrollBarThickness = 1
Scroll.AutomaticCanvasSize = Enum.AutomaticSize.XY
Scroll.Size = UDim2.new(0.868, 0, 0.765, 0)

local List = Instance.new("UIListLayout", Scroll)

List.HorizontalAlignment = Enum.HorizontalAlignment.Center
List.Name = "List"
List.Padding = UDim.new(0, game.Workspace.CurrentCamera.ViewportSize.Y * 0.005)
List.SortOrder = Enum.SortOrder.LayoutOrder

local Text = Instance.new("TextLabel", nil)

Text.BackgroundColor3 = Color3.new(1, 1, 1)
Text.BackgroundTransparency = 1
Text.BorderColor3 = Color3.new(0, 0, 0)
Text.BorderSizePixel = 0
Text.Font = Enum.Font.TitilliumWeb
Text.Name = "Text"
Text.Position = UDim2.new(0, 0, 1.51262796e-07, 0)
Text.Size = UDim2.new(0.99, 0,0.095, 0)
Text.Text = "Text"
Text.TextColor3 = Color3.new(1, 1, 1)
Text.TextScaled = true
Text.TextSize = 14
Text.TextStrokeTransparency = 0
Text.TextWrapped = true

local CmdSplit = Instance.new("Frame", nil)

CmdSplit.BackgroundColor3 = Color3.new(1, 1, 1)
CmdSplit.BackgroundTransparency = 0.30000001192092896
CmdSplit.BorderColor3 = Color3.new(0, 0, 0)
CmdSplit.BorderSizePixel = 0
CmdSplit.Name = "Split"
CmdSplit.Position = UDim2.new(0.0653301701, 0, 0.112627961, 0)
CmdSplit.Size = UDim2.new(0.221, 0,0, 1)

local Button = Instance.new("TextButton", nil)

Button.AutoButtonColor = false
Button.BackgroundColor3 = Color3.new(0, 0, 0)
Button.BackgroundTransparency = 0.5
Button.BorderColor3 = Color3.new(0, 0, 0)
Button.BorderSizePixel = 0
Button.ClipsDescendants = true
Button.Font = Enum.Font.TitilliumWeb
Button.Name = "Button"
Button.Position = UDim2.new(0.186595574, 0, 0.159805968, 0)
Button.Size = UDim2.new(0.99, 0,0.095, 0)
Button.Text = "  Button"
Button.TextColor3 = Color3.new(1, 1, 1)
Button.TextScaled = true
Button.TextSize = 14
Button.TextWrapped = true
Button.TextXAlignment = Enum.TextXAlignment.Left

local Toggle = Instance.new("TextButton", nil)

Toggle.AutoButtonColor = false
Toggle.BackgroundColor3 = Color3.new(0, 0, 0)
Toggle.BackgroundTransparency = 0.5
Toggle.BorderColor3 = Color3.new(0, 0, 0)
Toggle.BorderSizePixel = 0
Toggle.ClipsDescendants = true
Toggle.Font = Enum.Font.TitilliumWeb
Toggle.Name = "Toggle"
Toggle.Position = UDim2.new(0.186595574, 0, 0.159805968, 0)
Toggle.Size = UDim2.new(0.99, 0,0.095, 0)
Toggle.Text = " Toggle"
Toggle.TextColor3 = Color3.new(1, 1, 1)
Toggle.TextScaled = true
Toggle.TextSize = 14
Toggle.TextWrapped = true
Toggle.TextXAlignment = Enum.TextXAlignment.Left

local Select = Instance.new("TextButton", nil)

Select.AutoButtonColor = false
Select.BackgroundColor3 = Color3.new(0, 0, 0)
Select.BackgroundTransparency = 0.5
Select.BorderColor3 = Color3.new(0, 0, 0)
Select.BorderSizePixel = 0
Select.ClipsDescendants = true
Select.Font = Enum.Font.TitilliumWeb
Select.Name = "Select"
Select.Position = UDim2.new(0.186595574, 0, 0.159805968, 0)
Select.Size = UDim2.new(0.99, 0,0.095, 0)
Select.Text = " Select"
Select.TextColor3 = Color3.new(1, 1, 1)
Select.TextScaled = true
Select.TextSize = 14
Select.TextWrapped = true
Select.TextXAlignment = Enum.TextXAlignment.Left

local Option = Instance.new("TextLabel", Select)

Option.BackgroundColor3 = Color3.new(1, 1, 1)
Option.BackgroundTransparency = 1
Option.BorderColor3 = Color3.new(0, 0, 0)
Option.BorderSizePixel = 0
Option.Font = Enum.Font.TitilliumWeb
Option.Name = "Option"
Option.Size = UDim2.new(0.980000019, 0, 1, 0)
Option.Text = "Option"
Option.TextColor3 = Color3.new(1, 1, 1)
Option.TextScaled = true
Option.TextSize = 14
Option.TextStrokeTransparency = 0
Option.TextWrapped = true
Option.TextXAlignment = Enum.TextXAlignment.Right

local Metre = Instance.new("TextButton", nil)

Metre.AutoButtonColor = false
Metre.BackgroundColor3 = Color3.new(0, 0, 0)
Metre.BackgroundTransparency = 0.5
Metre.BorderColor3 = Color3.new(0, 0, 0)
Metre.BorderSizePixel = 0
Metre.ClipsDescendants = true
Metre.Font = Enum.Font.TitilliumWeb
Metre.Name = "Metre"
Metre.Position = UDim2.new(0.186595574, 0, 0.159805968, 0)
Metre.Size = UDim2.new(0.99, 0,0.095, 0)
Metre.Text = " Metre"
Metre.TextColor3 = Color3.new(1, 1, 1)
Metre.TextScaled = true
Metre.TextSize = 14
Metre.TextWrapped = true
Metre.TextXAlignment = Enum.TextXAlignment.Left

local Bar = Instance.new("Frame", Metre)

Bar.BackgroundColor3 = Color3.new(1, 1, 1)
Bar.BackgroundTransparency = 0.800000011920929
Bar.BorderColor3 = Color3.new(0, 0, 0)
Bar.BorderSizePixel = 0
Bar.Name = "Bar"
Bar.Size = UDim2.new(0, 0, 1, 0)

local Corner = Instance.new("UICorner", Bar)

Corner.CornerRadius = UDim.new(0.4,0)

local Popup = Instance.new("Frame", UI)

Popup.BackgroundColor3 = Color3.new(0, 0, 0)
Popup.BackgroundTransparency = 0.5
Popup.BorderColor3 = Color3.new(0, 0, 0)
Popup.BorderSizePixel = 0
Popup.Name = "Popup"
Popup.Position = UDim2.new(-0.263537854, 0, 0.747711897, 0)
Popup.Size = UDim2.new(0.262750238, 0, 0.227118641, 0)

local Corner = Instance.new("UICorner", Popup)

Corner.CornerRadius = UDim.new(0.05,0)

local Stroke = Instance.new("UIStroke", Popup)

Stroke.Thickness = 2
Stroke.Color = Color3.new(1,1,1)

local Title = Instance.new("TextLabel", Popup)

Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.BorderColor3 = Color3.new(0, 0, 0)
Title.BorderSizePixel = 0
Title.Font = Enum.Font.TitilliumWeb
Title.Name = "Title"
Title.Size = UDim2.new(1, 0, 0.204228088, 0)
Title.Text = "Notification"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextScaled = true
Title.TextSize = 14
Title.TextStrokeTransparency = 0
Title.TextWrapped = true

local Split = Instance.new("Frame", Popup)

Split.BackgroundColor3 = Color3.new(1, 1, 1)
Split.BorderColor3 = Color3.new(0, 0, 0)
Split.BorderSizePixel = 0
Split.Name = "Split"
Split.Position = UDim2.new(0.0653302073, 0, 0.202180326, 0)
Split.Size = UDim2.new(0.867999971, 0, 0, 1)

local PopupDescription = Instance.new("TextLabel", Popup)

PopupDescription.BackgroundColor3 = Color3.new(1, 1, 1)
PopupDescription.BackgroundTransparency = 1
PopupDescription.BorderColor3 = Color3.new(0, 0, 0)
PopupDescription.BorderSizePixel = 0
PopupDescription.Font = Enum.Font.TitilliumWeb
PopupDescription.Name = "Description"
PopupDescription.Position = UDim2.new(0, 0, 0.208955452, 0)
PopupDescription.Size = UDim2.new(1, 0, 0.517660677, 0)
PopupDescription.Text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis gravida ipsum ac lacus venenatis laoreet."
PopupDescription.TextColor3 = Color3.new(1, 1, 1)
PopupDescription.TextScaled = true
PopupDescription.TextSize = 14
PopupDescription.TextStrokeTransparency = 0
PopupDescription.TextWrapped = true

local OkButton = Instance.new("TextButton", Popup)

OkButton.BackgroundColor3 = Color3.new(0, 0, 0)
OkButton.BackgroundTransparency = 0.5
OkButton.BorderColor3 = Color3.new(0, 0, 0)
OkButton.BorderSizePixel = 0
OkButton.Font = Enum.Font.TitilliumWeb
OkButton.Name = "Button"
OkButton.Position = UDim2.new(0.397482574, 0, 0.771392584, 0)
OkButton.Size = UDim2.new(0.202683002, 0, 0.174129367, 0)
OkButton.Text = "Ok"
OkButton.TextColor3 = Color3.new(1, 1, 1)
OkButton.TextScaled = true
OkButton.TextSize = 14
OkButton.TextWrapped = true

local Corner = Instance.new("UICorner", OkButton)

Corner.CornerRadius = UDim.new(0.3,0)

local PlayerMenu = Instance.new("Frame", UI)

PlayerMenu.BackgroundColor3 = Color3.new(0, 0, 0)
PlayerMenu.BackgroundTransparency = 0.5
PlayerMenu.BorderColor3 = Color3.new(0, 0, 0)
PlayerMenu.BorderSizePixel = 0
PlayerMenu.Visible = false
PlayerMenu.Name = "PlayerMenu"
PlayerMenu.Position = UDim2.new(0.759660482, 0, 0.0302541964, 0)
PlayerMenu.Size = UDim2.new(0.225326389, 0, 0.46892637, 0)

local Corner = Instance.new("UICorner", PlayerMenu)

Corner.CornerRadius = UDim.new(0.05,0)

local Stroke = Instance.new("UIStroke", PlayerMenu)

Stroke.Color = Color3.new(1,1,1)
Stroke.Thickness = 2

local PlrName = Instance.new("TextLabel", PlayerMenu)

PlrName.BackgroundColor3 = Color3.new(1, 1, 1)
PlrName.BackgroundTransparency = 1
PlrName.BorderColor3 = Color3.new(0, 0, 0)
PlrName.BorderSizePixel = 0
PlrName.Font = Enum.Font.TitilliumWeb
PlrName.Name = "PlrName"
PlrName.Size = UDim2.new(1, 0, 0.11467579, 0)
PlrName.Text = "Player"
PlrName.TextColor3 = Color3.new(1, 1, 1)
PlrName.TextScaled = true
PlrName.TextSize = 14
PlrName.TextStrokeTransparency = 0
PlrName.TextWrapped = true

local PlrSplit2 = Instance.new("Frame", PlayerMenu)

PlrSplit2.BackgroundColor3 = Color3.new(1, 1, 1)
PlrSplit2.BackgroundTransparency = 0.30000001192092896
PlrSplit2.BorderColor3 = Color3.new(0, 0, 0)
PlrSplit2.BorderSizePixel = 0
PlrSplit2.Name = "PlrSplit2"
PlrSplit2.Position = UDim2.new(0.0653301701, 0, 0.112627961, 0)
PlrSplit2.Size = UDim2.new(0.867999971, 0, 0, 1)

local PlrScroll = Instance.new("ScrollingFrame", PlayerMenu)

PlrScroll.Active = true
PlrScroll.BackgroundColor3 = Color3.new(1, 1, 1)
PlrScroll.BackgroundTransparency = 0.9999998807907104
PlrScroll.BorderColor3 = Color3.new(0, 0, 0)
PlrScroll.BorderSizePixel = 0
PlrScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
PlrScroll.Name = "Scroll"
PlrScroll.Position = UDim2.new(0.0653299838, 0, 0.160410732, 0)
PlrScroll.ScrollBarThickness = 1
PlrScroll.Size = UDim2.new(0.867999673, 0, 0.76517874, 0)

local List = Instance.new("UIListLayout", PlrScroll)

List.HorizontalAlignment = Enum.HorizontalAlignment.Center
List.Name = "List"
List.Padding = UDim.new(0.0199999996, 0)
List.SortOrder = Enum.SortOrder.LayoutOrder

local PlrButton = Instance.new("TextButton", PlrScroll)

PlrButton.AutoButtonColor = false
PlrButton.BackgroundColor3 = Color3.new(0, 0, 0)
PlrButton.BackgroundTransparency = 0.5
PlrButton.BorderColor3 = Color3.new(0, 0, 0)
PlrButton.BorderSizePixel = 0
PlrButton.ClipsDescendants = true
PlrButton.Font = Enum.Font.TitilliumWeb
PlrButton.Name = "PlrButton"
PlrButton.Position = UDim2.new(0.186595574, 0, 0, 0)
PlrButton.Size = UDim2.new(0.680207551, 0, 0.0950434357, 0)
PlrButton.Text = "  Button"
PlrButton.TextColor3 = Color3.new(1, 1, 1)
PlrButton.TextScaled = true
PlrButton.TextSize = 14
PlrButton.TextWrapped = true
PlrButton.TextXAlignment = Enum.TextXAlignment.Left

local PlrToggle = Instance.new("TextButton", PlrScroll)

PlrToggle.AutoButtonColor = false
PlrToggle.BackgroundColor3 = Color3.new(0, 0, 0)
PlrToggle.BackgroundTransparency = 0.5
PlrToggle.BorderColor3 = Color3.new(0, 0, 0)
PlrToggle.BorderSizePixel = 0
PlrToggle.ClipsDescendants = true
PlrToggle.Font = Enum.Font.TitilliumWeb
PlrToggle.Name = "PlrToggle"
PlrToggle.Position = UDim2.new(0.186595574, 0, 0.115043469, 0)
PlrToggle.Size = UDim2.new(0.680207551, 0, 0.0950434357, 0)
PlrToggle.Text = " Toggle"
PlrToggle.TextColor3 = Color3.new(1, 1, 1)
PlrToggle.TextScaled = true
PlrToggle.TextSize = 14
PlrToggle.TextWrapped = true
PlrToggle.TextXAlignment = Enum.TextXAlignment.Left

local PlrSplit = Instance.new("Frame", PlrScroll)

PlrSplit.BackgroundColor3 = Color3.new(1, 1, 1)
PlrSplit.BackgroundTransparency = 0.30000001192092896
PlrSplit.BorderColor3 = Color3.new(0, 0, 0)
PlrSplit.BorderSizePixel = 0
PlrSplit.Name = "PlrSplit"
PlrSplit.Position = UDim2.new(0.0653301701, 0, 0.112627961, 0)
PlrSplit.Size = UDim2.new(0.867999971, 0, 0, 1)

local Description = Instance.new("Frame", UI)

Description.BackgroundColor3 = Color3.new(0, 0, 0)
Description.BackgroundTransparency = 0.5
Description.BorderColor3 = Color3.new(0, 0, 0)
Description.BorderSizePixel = 0
Description.Name = "Description"
Description.Position = UDim2.new(0.208746657, 0, 0.323474526, 0)
Description.Size = UDim2.new(0.182680607, 0, 0.0740111247, 0)
Description.Visible = false

local Corner = Instance.new("UICorner", Description)

Corner.CornerRadius = UDim.new(0.2,0)

local Stroke = Instance.new("UIStroke", Description)

Stroke.Color = Color3.new(1,1,1)
Stroke.Thickness = 2

local Desc = Instance.new("TextLabel", Description)

Desc.BackgroundColor3 = Color3.new(1, 1, 1)
Desc.BackgroundTransparency = 1
Desc.BorderColor3 = Color3.new(0, 0, 0)
Desc.BorderSizePixel = 0
Desc.Font = Enum.Font.TitilliumWeb
Desc.Name = "Desc"
Desc.Position = UDim2.new(0, 0, -5.90663944e-07, 0)
Desc.Size = UDim2.new(1, 0, 0.999998569, 0)
Desc.TextColor3 = Color3.new(1, 1, 1)
Desc.TextScaled = true
Desc.TextSize = 14
Desc.TextStrokeTransparency = 0
Desc.TextWrapped = true

-- Functions

function Sound(Parent,Id,Pitch)

	local Sound = Instance.new("Sound")

	if type(Parent) == "userdata" then

		Sound.Parent = Parent

	end

	if type(Parent) == "vector" then

		local Part = Instance.new("Part",game.Workspace)
		Part.Transparency = 1
		Part.Anchored = true
		Part.Position = Parent
		Part.Size = Vector3.new(0.01,0.01,0.01)
		Sound.Parent = Part

		Sound.Ended:Connect(function() wait(0.5) Part:Destroy()  end)

	end

	Sound.SoundId = "rbxassetid://" .. Id

	if Pitch == nil then

		Sound.PlaybackSpeed = 1

	end

	if Pitch == "random" then

		Sound.PlaybackSpeed = math.random(90,110) / 100

	else

		Sound.PlaybackSpeed = Pitch

	end

	Sound:Play()

	Sound.Ended:Connect(function() wait(0.5) Sound:Destroy()  end)

end

function ShowPopup(TitleText: string,DescriptionText: string,ButtonText: string)

	if Popup:HasTag("Open") then

		game.TweenService:Create(Popup,TweenInfo.new(0.2),{Position = UDim2.new(0.01, 0,1.1, 0)}):Play()
		wait(0.2)

	end

	Popup.Position = UDim2.new(-0.264, 0,0.748, 0)

	Popup:AddTag("Open")

	Sound(game.Workspace,"3398620867",1)

	OkButton.Text = ButtonText

	PopupDescription.Text = DescriptionText

	Title.Text = TitleText

	game.TweenService:Create(Popup,TweenInfo.new(0.3),{Position = UDim2.new(0.01, 0,0.748, 0)}):Play()

	OkButton.MouseButton1Down:Once(function()

		Popup:RemoveTag("Open")
		game.TweenService:Create(Popup,TweenInfo.new(0.3),{Position = UDim2.new(-0.264, 0,0.748, 0)}):Play()

	end)

end

local UIS = game:GetService("UserInputService")

function Drag(Frame)
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragInput = nil
	local dragStart = nil
	local dragPos = nil
	local startPos

	local function updateInput(input)
		local Delta = input.Position - dragStart
		local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
		game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.30), {Position = Position}):Play()
	end
	Frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
			dragToggle = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	Frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if input == dragInput and dragToggle then
			updateInput(input)
		end
	end)
end

-- Variables

local Plr = game.Players.LocalPlayer
local Mouse = Plr:GetMouse()
local ID = game.PlaceId
local Commands = {}

-- Appear

game.TweenService:Create(Background,TweenInfo.new(0.5),{Size = UDim2.new(0.2, 0,0.447, 0)}):Play()
Drag(Background)

-- Commands

local Games = {

	["142823291"] = function ()

		local Gun = false
		local Coins = false
		local Stab = false
		local Loop = nil
		local MovePos = nil
		local Roles = false
		local GunShow = false
		local CoinReach = false
		local MurderAll = false

		local Found = nil

		local Best = math.huge

		Commands = {

			{

				Type = "Title",
				Text = "Visual"

			},

			{

				Type = "Split",

			},	

			{

				Name = "Show Roles",
				Type = "Toggle",
				Desc = "Shows you the roles of everybody",
				Action = function(On)

					if On then

						Roles = true

						spawn(function()

							while Roles do

								for _, Thing in game.Players:GetPlayers() do

									local Highlight = Instance.new("Highlight",Thing.Character)

									Highlight.FillTransparency = 1

									Highlight.OutlineColor = Color3.new(1,1,1)

									if not Thing.Character then

										continue

									end

									if Thing.Backpack:FindFirstChild("Knife") or Thing.Character:FindFirstChild("Knife") then

										Highlight.OutlineColor = Color3.new(1,0,0)

									end

									if Thing.Backpack:FindFirstChild("Gun") or Thing.Character:FindFirstChild("Gun") then

										Highlight.OutlineColor = Color3.new(0,0,1)

									end

									wait(0.01)

									if Thing.Character and Thing.Character:FindFirstChild("PlayerHighlightType") then

										Thing.Character:FindFirstChild("PlayerHighlightType"):Destroy()

									end

									Highlight.Name = "PlayerHighlightType"

								end

								wait(0.5)

							end

						end)

					else

						Roles = false

						spawn(function()

							for _, Thing in game.Players:GetPlayers() do

								if Thing.Character:FindFirstChild("PlayerHighlightType") then

									Thing.Character:FindFirstChild("PlayerHighlightType"):Destroy()

								end

							end

						end)

					end

				end,

			},

			{

				Name = "Show Gun",
				Type = "Toggle",
				Desc = "Shows you where the gun is (If dropped)",
				Action = function(On)

					if On then

						GunShow = true

						spawn(function()

							while GunShow do

								for _, Thing in game.Workspace:GetDescendants() do

									if Thing.Name == "GunDrop" and Thing:IsA("BasePart") and not Thing:FindFirstChild("GunHighlight") then

										local Highlight = Instance.new("Highlight",Thing)

										Highlight.FillTransparency = 1

										Highlight.OutlineColor = Color3.new(1,1,0)

										Highlight.Name = "GunHighlight"

									end

								end

								wait(0.5)

							end

						end)

					else

						GunShow = false

						spawn(function()

							for _, Thing in game.Players:GetPlayers() do

								if Thing.Character:FindFirstChild("PlayerHighlightType") then

									Thing.Character:FindFirstChild("PlayerHighlightType"):Destroy()

								end

							end

						end)

					end

				end,

			},

			{

				Name = "Fake Knife",
				Type = "Button",
				Desc = "Gives you an item to make it look like your holding a knife.",
				Action = function(On)

					local FakeKnife = Instance.new("Tool", Plr.Backpack)

					FakeKnife.CanBeDropped = false
					FakeKnife.Name = "Knife?"
					FakeKnife.TextureId = "rbxassetid://13298102229"
					FakeKnife.ToolTip = 'Click to "Swing"'

					local Handle = Instance.new("Part", FakeKnife)

					Handle.CanCollide = false
					Handle.Name = "Handle"
					Handle.Size = Vector3.new(0.001, 0.001, 0.001)
					Handle.Transparency = 1

					FakeKnife.Activated:Connect(function()

						local Animation = Instance.new("Animation",Plr.Character)
						Animation.Name = "FakeSwing"

						if math.random(1,2) == 1 then

							Animation.AnimationId = "rbxassetid://1957890538"

						else

							Animation.AnimationId = "rbxassetid://2467567750"

						end

						local Track = Plr.Character.Humanoid:LoadAnimation(Animation)

						Track:Play()

						FakeKnife.Enabled = false

						wait(1)

						FakeKnife.Enabled = true

					end)

				end,

			},

			{

				Type = "Title",
				Text = "Teleport"

			},

			{

				Type = "Split",

			},	

			{

				Name = "To Innocent",
				Type = "Button",
				Desc = "Teleport to an innocent.",
				Action = function(On)

					local Inno = nil

					for _, Thing in game.Players:GetPlayers() do

						if Thing and Thing.Backpack:FindFirstChild("Gun") or Thing and Thing.Character:FindFirstChild("Gun") then

							continue

						end

						if Thing and Thing.Backpack:FindFirstChild("Knife") or Thing and Thing.Character:FindFirstChild("Knife") then

							continue

						end

						Inno = Thing

					end

					if Inno == nil then

						ShowPopup("Teleport","The round hasnt started yet or people haven't got their items.","Ok")

					else

						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Inno.Character.HumanoidRootPart.CFrame

					end

				end,

			},

			{

				Name = "To Sheriff",
				Type = "Button",
				Desc = "Teleport to the sheriff.",
				Action = function(On)

					local Sheriff = nil

					for _, Thing in game.Players:GetPlayers() do

						if Thing and  Thing.Backpack:FindFirstChild("Gun") or Thing and Thing.Character:FindFirstChild("Gun") then

							Sheriff = Thing

						end

					end

					if Sheriff == nil then

						ShowPopup("Teleport","There is no sheriff right now.","Ok")

					else

						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Sheriff.Character.HumanoidRootPart.CFrame

					end

				end,

			},

			{

				Name = "To Murderer",
				Type = "Button",
				Desc = "Teleport to the murderer.",
				Action = function(On)

					local Murderer = nil

					for _, Thing in game.Players:GetPlayers() do

						if Thing.Backpack:FindFirstChild("Knife") or Thing.Character:FindFirstChild("Knife") then

							Murderer = Thing

						end

					end

					if Murderer == nil then

						ShowPopup("Teleport","There is no murderer yet.","Ok")

					else

						game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Murderer.Character.HumanoidRootPart.CFrame

					end

				end,

			},

			{

				Name = "To Lobby",
				Type = "Button",
				Desc = "Goto the lobby. Good for afking.",
				Action = function(On)

					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-107.900009, 146.830475, 22.3888321, 1, 0, 0, 0, 1, 0, 0, 0, 1)

				end,

			},

			{

				Name = "Auto Sheriff Gun",
				Type = "Toggle",
				Desc = "Automatically teleport to the gun when its dropped.",
				Action = function(On)

					if On then

						Gun = true

						spawn(function()

							while Gun do

								task.wait(1)

								for _, Thing in game.Workspace:GetDescendants() do

									if Thing.Name == "GunDrop" and Thing:IsA("BasePart") then

										if Plr.Character then

											Plr.Character.HumanoidRootPart.CFrame = Thing.CFrame

										end

									end

								end

							end

						end)

					else

						Gun = false

					end

				end,

			},

			{

				Type = "Title",
				Text = "Farming"

			},

			{

				Type = "Split",

			},

			{

				Name = "Get Coins",
				Type = "Toggle",
				Desc = "Automatically tween to every coin.",
				Action = function(On)

					if On then

						local Checked = false

						Coins = true

						local Move = Instance.new("BodyVelocity",Plr.Character.HumanoidRootPart)

						Move.Velocity = Vector3.new(0,0,0)

						local function NoclipLoop()

							if Plr.Character.Humanoid then

								Plr.Character.Humanoid.Sit = true

							end
							for _, Limb in Plr.Character:GetDescendants() do
								if Limb:IsA("BasePart") and Limb.CanCollide == true then
									Limb.CanCollide = false
								end
							end

						end

						local Noclipping = game["Run Service"].Stepped:Connect(NoclipLoop)

						Loop = Noclipping
						MovePos = Move

						spawn(function()

							Coins = true

							while Coins do

								task.wait(0.2)

								for _, Thing in game.Workspace:GetDescendants() do

									if Coins == false then

										Noclipping:Disconnect()
										Move:Destroy()
										Plr.Character.Humanoid.Sit = false
										return

									end

									if Thing.Name == "CoinVisual" and Thing.Transparency == 0 and Thing:IsA("BasePart") then

										if (Thing.Position - Plr.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude < Best then

											Best = (Thing.Position - Plr.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude
											Found = Thing

											if Coins == false then

												Noclipping:Disconnect()
												Move:Destroy()
												Plr.Character.Humanoid.Sit = false
												return

											end

										end

									end

								end

								if not Found then

									continue

								end

								if Found.Transparency ~= 0 then

									for _, Thing in game.Workspace:GetDescendants() do

										if Coins == false then

											Noclipping:Disconnect()
											Move:Destroy()
											Plr.Character.Humanoid.Sit = false
											return

										end

										if Thing.Name == "CoinVisual" and Thing.Transparency == 0 and Thing:IsA("BasePart") then

											Found = Thing

											if Coins == false then

												Noclipping:Disconnect()
												Move:Destroy()
												Plr.Character.Humanoid.Sit = false
												return

											end

										end

									end

								end

								Move.Velocity = (Found.Position - Plr.Character.HumanoidRootPart.Position).Unit * 25

								repeat

									wait(0.2)

									Move.Velocity = (Found.Position - Plr.Character.HumanoidRootPart.Position).Unit * 25

									if Coins == false then

										Noclipping:Disconnect()
										Move:Destroy()
										Plr.Character.Humanoid.Sit = false
										return

									end

								until Found.Transparency ~= 0 or Found == nil

							end

							Noclipping:Disconnect()
							Move:Remove()
							Plr.Character.Humanoid.Sit = false

						end)

					else

						Coins = false
						Plr.Character.Humanoid.Sit = false
						MovePos:Remove()
						if Loop then

							Loop:Disconnect()

						end

					end

				end,

			},

			{

				Name = "Coin Reach (LAG)",
				Type = "Toggle",
				Desc = "Makes the coin hitbox small and big to make it keep hitting you. Lag expected so its good afking with get coins.",
				Action = function(On)

					if On then

						CoinReach = true

						spawn(function()

							while CoinReach do

								for _, Thing in game.Workspace:GetDescendants() do

									if Thing.Name == "Coin_Server" then

										if Thing.Size == Vector3.new(2048,2048,2048) then

											Thing.Size = Vector3.new(2,2,1)

										else

											Thing.Size = Vector3.new(2048,2048,2048)

										end

									end

								end

								wait(0.05)

							end

						end)

					else

						CoinReach = false
						spawn(function()

							for _, Thing in game.Workspace:GetDescendants() do

								if Thing.Name == "Coin_Server" then

									Thing.Size = Vector3.new(2,2,1)							

								end

							end

						end)

					end

				end,

			},

			{

				Type = "Title",
				Text = "Killing"

			},

			{

				Type = "Split",

			},

			{

				Name = "Murder All",
				Type = "Button",
				Desc = "Makes the knife touch everybody then swings. firetouchinterest UNC needed.",
				Action = function(On)

					if not firetouchinterest then

						ShowPopup("Murder All","You do not have the firetouchinterest UNC function. Please use an executor with it. (Eg: Nova, Arcadia, Wave)","Ok")
						return

					end

					if not Plr.Character:FindFirstChild("Knife") then

						ShowPopup("Murder All","Please equip your knife.","Ok")
						return

					end
					
					Plr.Character:FindFirstChild("Knife"):Activate()

					for _, Thing in game.Players:GetPlayers() do

						if Thing ~= Plr and Thing.Character:FindFirstChild("HumanoidRootPart") then

							firetouchinterest(Plr.Character:FindFirstChildOfClass("Knife").Handle.TouchInterest,Thing.Character:FindFirstChild("HumanoidRootPart"),1)

						end

					end

				end,

			},

		}

	end,

	["662417684"] = function ()

		local Opening = false

		Commands = {

			{

				Name = "Lucky Block",
				Type = "Button",
				Desc = "Open a lucky block.",
				Action = function()

					game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()

				end,

			},

			{

				Name = "Rainbow Block",
				Type = "Button",
				Desc = "Open a rainbow block.",
				Action = function()

					game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()

				end,

			},

			{

				Name = "Diamond Block",
				Type = "Button",
				Desc = "Open a diamond block.",
				Action = function()

					game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()

				end,

			},

			{

				Name = "Galaxy Block",
				Type = "Button",
				Desc = "Open a galaxy block.",
				Action = function()

					game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()

				end,

			},

			{

				Name = "Super Block",
				Type = "Button",
				Desc = "Open a unused super block. Opens 1 item but is rare.",
				Action = function()

					game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()

				end,

			},

			{

				Type = "Split",

			},

			{

				Name = "Get Items",
				Type = "Toggle",
				Desc = "Keep on getting items until you get every single one.",
				Action = function(On)

					if On then

						Opening = true

						spawn(function()

							while Opening do

								for i=1,10 do

									game:GetService("ReplicatedStorage").SpawnLuckyBlock:FireServer()
									game:GetService("ReplicatedStorage").SpawnSuperBlock:FireServer()
									game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
									game:GetService("ReplicatedStorage").SpawnDiamondBlock:FireServer()
									game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()

								end
								wait(0.1)

							end

						end)

					else

						Opening = false

					end

				end,

			},

		}

	end,

	["15980086096"] = function ()

		local OldPos = CFrame.new()

		local Untouchable = false

		Commands = {

			{

				Name = "Godly Upgrade",
				Type = "Button",
				Desc = "Select a infection punch or melee to make it op.",
				Action = function(On)

					if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then

						local Tool = Instance.new("Tool")

						Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")

						game.Players.LocalPlayer.Character.Humanoid:UnequipTools()

						if Tool.TextureId == "http://www.roblox.com/asset/?id=2421576431" then

							ShowPopup("Godly Upgrade","This tool is already modded.","Ok")
							return					

						end

						Tool.TextureId = "http://www.roblox.com/asset/?id=2421576431"

						Tool.ToolTip = "Godly Weapon"

						Tool.Equipped:Connect(function()

							local stopit = false

							Tool.Unequipped:Connect(function()

								stopit = true

							end)

							repeat


								local player = game.Players.LocalPlayer
								local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
								if not root then return end

								local Closest, CDist = nil, math.huge

								for _, other in pairs(game.Players:GetPlayers()) do
									if other.Character.Humanoid.DisplayName ~= "ghost" and other ~= player and other.Character then
										local otherRoot = other.Character:FindFirstChild("HumanoidRootPart")
										if otherRoot then
											local Dist = (root.Position - otherRoot.Position).Magnitude
											if Dist < CDist then
												Closest, CDist = other.Character, Dist
											end
										end
									end
								end

								if Closest then
									if Tool.Name ~= "Gun" then

										local Head = Closest:WaitForChild("Head")
										local Humanoid = Closest:WaitForChild("Humanoid")
										local Pos = Closest:WaitForChild("Torso").Position

										for i=1,5 do

											Tool.Remote.Hit:FireServer(Head,Humanoid,Pos)

										end

									else

										local Pos = Closest:WaitForChild("Torso").Position

										Tool.Shoot:FireServer(Pos)

									end
								end

								wait(0.01)

							until stopit

						end)

					else

						ShowPopup("Godly Upgrade","Please hold an item that can be modded.","Ok")

					end

				end,

			},

			{

				Name = "Swoop (READ DESC)",
				Type = "Button",
				Desc = "Equip any melee weapon and click this, Then when you hold it, Click when you swoop into somebody.",
				Action = function(On)

					if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then

						local Tool = Instance.new("Tool")

						Tool = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")

						game.Players.LocalPlayer.Character.Humanoid:UnequipTools()

						if Tool.TextureId == "http://www.roblox.com/asset/?id=7485051715" then

							ShowPopup("Lock-Hit","This tool is already modded.","Ok")
							return					

						end

						Tool.TextureId = "http://www.roblox.com/asset/?id=7485051715"

						Tool.ToolTip = "Equip to SWOOP"

						Tool.Activated:Connect(function()

							wait(0.3)
							Tool.Enabled = false
							wait(1)
							Tool.Enabled = true

						end)

						Tool.Equipped:Connect(function()

							for _, Thing in game.Workspace:GetDescendants() do

								if Thing:IsA("BasePart") then

									Thing:SetAttribute("Collide",Thing.CanCollide)

									Thing.CanCollide = false

								end

							end

							local Move = Instance.new("BodyPosition",game.Players.LocalPlayer.Character.HumanoidRootPart)

							Move.MaxForce *= 7
							Move.P *= 2.5

							local Stop = false					

							game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true

							Tool.Unequipped:Connect(function()

								for _, Thing in game.Workspace:GetDescendants() do

									if Thing:IsA("BasePart") then

										Thing.CanCollide = Thing:GetAttribute("Collide")

									end

								end

								Move:Destroy()
								Stop = true
								game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false

							end)

							while not Stop do

								task.wait(0.1)

								local player = game.Players.LocalPlayer
								local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
								if not root then return end

								local Closest, CDist = nil, math.huge

								for _, other in pairs(game.Players:GetPlayers()) do
									if other ~= player and other.Team ~= player.Team and other.Character then
										local otherRoot = other.Character:FindFirstChild("HumanoidRootPart")
										if otherRoot then
											local Dist = (root.Position - otherRoot.Position).Magnitude
											if Dist < CDist then
												Closest, CDist = otherRoot, Dist
											end
										end
									end
								end

								if Closest then

									if Tool.Enabled then

										Move.Position = Closest.Position + (Closest.Velocity / 4) - Vector3.new(0,3,0)

									else

										Move.Position = Closest.Position + (Closest.Velocity / 4) + Vector3.new(0,50,0)

									end

								end

							end

						end)

					else

						ShowPopup("Lock-Hit","Please hold a melee.","Ok")

					end

				end,

			},

			{

				Type = "Split",

			},

			{

				Name = "Auto-Escape",
				Type = "Toggle",
				Desc = "Instantly escapes from grabs.",
				Action = function(On)

					if On then

						Untouchable = true

						spawn(function()

							while Untouchable do

								task.wait()

								if game.Players.LocalPlayer.PlayerGui:FindFirstChild("EscapeGui") then

									game.Players.LocalPlayer.PlayerGui:FindFirstChild("EscapeGui").Remote.Hit:InvokeServer()

								end

							end

						end)

					else

						Untouchable = false

					end

				end,

			},

			{

				Name = "Antidote",
				Type = "Toggle",
				Desc = "Goo doesnt effect you.",
				Action = function(On)

					if On then

						for _, Thing in game.Workspace:GetDescendants() do

							if Thing.Name == "TransfurPart" and Thing:IsA("BasePart") then

								Thing.CanTouch = false
								Thing.Transparency = 0.8

							end

						end

					else

						for _, Thing in game.Workspace:GetDescendants() do

							if Thing.Name == "TransfurPart" and Thing:IsA("BasePart") then

								Thing.CanTouch = true
								Thing.Transparency = 0

							end

						end

					end

				end,

			},

			{

				Name = "Spam Jump",
				Type = "Toggle",
				Desc = "Remove the jump cooldown.",
				Action = function(On)

					if On then

						game.Players.LocalPlayer.Character.JumpCooldown.Enabled = false

					else

						game.Players.LocalPlayer.Character.JumpCooldown.Enabled = true

					end

				end,

			},

			{

				Name = "Disable Forcefield",
				Type = "Toggle",
				Desc = "The lobby forcefield doesnt effect you.",
				Action = function(On)

					if On then

						for _, Thing in game.Workspace:GetDescendants() do

							if Thing.Name == "Kill" and Thing:IsA("BasePart") then

								Thing.CanTouch = false
								Thing.Color = Color3.new(0,1,0)
								Thing.Transparency = 0.7

							end

						end

					else

						for _, Thing in game.Workspace:GetDescendants() do

							if Thing.Name == "Kill" and Thing:IsA("BasePart") then

								Thing.CanTouch = true
								Thing.Transparency = 1

							end

						end

					end

				end,

			},

			{

				Type = "Split",

			},

			{

				Name = "Lobby",
				Type = "Button",
				Desc = "Go to the lobby.",
				Action = function(On)

					for _, Thing in game.Players.LocalPlayer.Character:GetDescendants() do

						if Thing:IsA("BasePart") then

							Thing.Velocity = Vector3.new(0,0,0)

						end

					end

					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(136, 9, -11776)

				end,

			},

			{

				Name = "Puddle",
				Type = "Button",
				Desc = "Go to a puddle.",
				Action = function(On)

					for _, Thing in game.Players.LocalPlayer.Character:GetDescendants() do

						if Thing:IsA("BasePart") then

							Thing.Velocity = Vector3.new(0,0,0)

						end

					end

					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(223, -10, -11788)

				end,

			},

			{

				Name = "Outside",
				Type = "Button",
				Desc = "Go outside.",
				Action = function(On)

					for _, Thing in game.Players.LocalPlayer.Character:GetDescendants() do

						if Thing:IsA("BasePart") then

							Thing.Velocity = Vector3.new(0,0,0)

						end

					end

					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(120, 47, -11797)

				end,

			},

		}

	end,

	["10679239752"] = function ()

		local Speed = 16
		local UsingSpeed = false
		local SpeedWarn = false
		local NilFolder = Instance.new("Folder",nil)
		local Herecomesthemoneyyyyyyherewegomoneytimeherecomesthemoneyyyymoneymoneymoneymoneymoneymoneymoneymoneymoneyyyyyyyyyyyyyyyyy = false
		local Plr = game.Players.LocalPlayer

		local Character = Plr.Character or Plr.CharacterAdded:Wait()

		Plr.CharacterAdded:Connect(function(New)

			Character = New

		end)

		Commands = {

			{

				Name = "Loop Speed",
				Desc = "Keep setting your speed to this. 25-30 is recommended so the anticheat dont activate.",
				Type = "Metre",
				Min = 16,
				Max = 35,
				Default = 16,
				Action = function(Value)

					Speed = Value

					if tonumber(Speed) > tonumber(30) and SpeedWarn == false then

						SpeedWarn = true
						ShowPopup("Warning","Going over 30 could sometimes trigger the anticheat and going over 35 can often trigger the anticheat.","Got it")

					end

				end,

			},

			{

				Name = "Toggle Speed",
				Desc = "Toggle the loop speed. (HINT: If you do it right, sometimes by not moving and grabbing, or not, you can move really fast while grabbing somebody.",
				Type = "Toggle",
				Action = function(On)

					if On then

						UsingSpeed = true

						spawn(function()

							repeat

								task.wait()

								Character.Humanoid.WalkSpeed = Speed

							until not UsingSpeed

						end)

					else

						UsingSpeed = false

					end

				end,

			},

			{

				Type = "Split",

			},

			{

				Name = "Disable Forcefield",
				Desc = "Be able to go inside forcefields as a infected.",
				Type = "Toggle",
				Action = function(On)

					if On then

						local Map = nil

						for _, Thing in game.Workspace:GetChildren() do

							if Thing:FindFirstChildOfClass("SpawnLocation") then

								Map = Thing

							end

						end

						for _, Thing in Map:GetDescendants() do

							if Thing:IsA("BasePart") and Thing.Parent.Name ~= "Model" and Thing:FindFirstChild("Script") and Thing:FindFirstChild("Weld") and Thing:FindFirstChild("TouchInterest") then

								local Object = Instance.new("ObjectValue",Thing)

								Object.Name = "OriginalParent"

								Object.Value = Thing.Parent

								Thing.Parent = NilFolder

							end

						end

					else

						for _, Thing in NilFolder:GetChildren() do

							Thing.Parent = Thing:FindFirstChild("OriginalParent").Value

						end

					end

				end,

			},

			{

				Name = "Antidote",
				Desc = "Be immortal to infection puddles.",
				Type = "Toggle",
				Action = function(On)

					if On then

						local Map = nil

						for _, Thing in game.Workspace:GetChildren() do

							if Thing:FindFirstChildOfClass("SpawnLocation") then

								Map = Thing

							end

						end

						for _, Thing in Map:GetDescendants() do

							if Thing:IsA("BasePart") and Thing.Parent.Name == "Model" and Thing:FindFirstChild("Script") and Thing:FindFirstChild("Weld") and Thing:FindFirstChild("TouchInterest") then

								Thing.CanTouch = false
								Thing.Transparency = 0.5

							end

						end

					else

						local Map = nil

						for _, Thing in game.Workspace:GetChildren() do

							if Thing:FindFirstChildOfClass("SpawnLocation") then

								Map = Thing

							end

						end

						for _, Thing in Map:GetDescendants() do

							if Thing:IsA("BasePart") and Thing.Parent.Name == "Model" and Thing:FindFirstChild("Script") and Thing:FindFirstChild("Weld") and Thing:FindFirstChild("TouchInterest") then

								Thing.CanTouch = true
								Thing.Transparency = 0

							end

						end

					end

				end,

			},

			{

				Name = "Auto-Money",
				Desc = "Get all money that appears (Only works as non infected).",
				Type = "Toggle",
				Action = function(On)

					if On then

						local Map = nil

						for _, Thing in game.Workspace:GetChildren() do

							if Thing:FindFirstChildOfClass("SpawnLocation") then

								Map = Thing

							end

						end

						Herecomesthemoneyyyyyyherewegomoneytimeherecomesthemoneyyyymoneymoneymoneymoneymoneymoneymoneymoneymoneyyyyyyyyyyyyyyyyy = true

						for _, Thing in Map:GetDescendants() do

							if Thing:IsA("BasePart") and Thing.Name == "MoneyStack" then

								Thing:SetAttribute("OldPos",Thing.Position)

							end

						end

						spawn(function()

							while Herecomesthemoneyyyyyyherewegomoneytimeherecomesthemoneyyyymoneymoneymoneymoneymoneymoneymoneymoneymoneyyyyyyyyyyyyyyyyy do

								wait(0.1)

								for _, Thing in Map:GetDescendants() do

									if Thing:IsA("BasePart") and Thing.Name == "MoneyStack" then

										Thing.Position = Character.HumanoidRootPart.Position

									end

								end

							end

						end)

					else

						Herecomesthemoneyyyyyyherewegomoneytimeherecomesthemoneyyyymoneymoneymoneymoneymoneymoneymoneymoneymoneyyyyyyyyyyyyyyyyy = false -- ): no money

						local Map = nil

						for _, Thing in game.Workspace:GetChildren() do

							if Thing:FindFirstChildOfClass("SpawnLocation") then

								Map = Thing

							end

						end

						pcall(function()

							for _, Thing in Map:GetDescendants() do

								if Thing:IsA("BasePart") and Thing.Name == "MoneyStack" then

									Thing.Position = Thing:GetAttribute("OldPos")

								end

							end

						end)

					end

				end,

			},

			{

				Name = "Spam Jump",
				Desc = "Lets you jump without cooldown.",
				Type = "Toggle",
				Action = function(On)

					if On then

						Plr.PlayerGui.JumpCooldown.Enabled = false

					else

						Plr.PlayerGui.JumpCooldown.Enabled = true

					end

				end,

			},

		}

	end,

	["13987158269"] = function ()

		local Immortal = false
		local Reveal = false
		local AutoWin = false

		Commands = {

			{

				Name = "Xray",
				Type = "Toggle",
				Desc = "See whats correct.",
				Action = function(Value)

					if Value then

						for _, Item in game.Workspace.segmentSystem.Segments:GetDescendants() do

							if Item:IsA("BasePart") then

								Item:SetAttribute("OldColor",Item.Color)

								if Item.CanCollide == true then

									Item.Color = Color3.new(0,1,0)

								else

									Item.Color = Color3.new(1,0,0)

								end

							end

						end

					else

						for _, Item in game.Workspace.segmentSystem.Segments:GetDescendants() do

							if Item:IsA("BasePart") then

								Item.Color = Item:GetAttribute("OldColor")

							end

						end

					end

				end

			},

			{

				Name = "Win",
				Type = "Button",
				Desc = "Win the game.",
				Action = function()

					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-744.0151977539062, 80.515592575073242, -556.0556640625)

				end

			},

			{

				Name = "Auto-Win",
				Type = "Toggle",
				Desc = "Win the game over and over.",
				Action = function(On)

					if On then

						AutoWin = true

						spawn(function()

							repeat

								game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-744.0151977539062, 70.515592575073242, -556.0556640625)

								for _, Thing in game.Players.LocalPlayer.Character:GetDescendants() do

									if Thing:IsA("BasePart") then

										Thing.Velocity = Vector3.new(0,0,0)

									end

								end

								for _, Thing in game.Players.LocalPlayer.PlayerGui.HUD:GetChildren() do

									if Thing.Name == "Frame" then

										Thing:Destroy()

									end

								end

								wait(0.5)

							until not AutoWin

						end)

					else

						AutoWin = false

					end

				end

			},

			{

				Name = "Immortality",
				Type = "Toggle",
				Desc = "All glass is safe.",
				Action = function(Value)

					if Reveal then

						ShowPopup("Error","Please disable reveal path first.","Ok")
						return

					end

					if Value then

						Immortal = true

						local Highlight = Instance.new("Highlight", game.Players.LocalPlayer.Character)
						Highlight.FillTransparency = 1
						Highlight.Name = "Protect"
						Highlight.OutlineTransparency = 0
						Highlight.OutlineColor = Color3.new(0.133333, 0.741176, 1)

						for _, Item in game.Workspace.segmentSystem.Segments:GetDescendants() do

							if Item:IsA("BasePart") then

								Item:SetAttribute("CanCollide", Item.CanCollide)

								if Item.CanCollide == false then

									Item.CanCollide = true
									Item.CanTouch = false

								end

							end

						end

					else

						Immortal = false

						if game.Players.LocalPlayer.Character:FindFirstChild("Protect") then

							game.Players.LocalPlayer.Character.Protect:Destroy()

						end

						for _, Item in game.Workspace.segmentSystem.Segments:GetDescendants() do

							if Item:IsA("BasePart") then

								Item.CanCollide = Item:GetAttribute("CanCollide")
								Item.CanTouch = true

							end

						end

					end

				end

			},

			{

				Name = "Reveal Path",
				Type = "Toggle",
				Desc = "Reveal the path to everybody else.",
				Action = function(On)

					if Immortal then

						ShowPopup("Error","Please disable immortality first.","Ok")
						return

					end

					if On then

						Reveal = true

						spawn(function()

							while Reveal do

								task.wait()

								for _, Item in game.Workspace.segmentSystem.Segments:GetDescendants() do

									if Item:IsA("BasePart") then

										if Item.CanCollide == false and Item.Name ~= "Center" and Item.Transparency ~= 1 then

											local OldPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame

											game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Item.CFrame

											for _, Thing in game.Players.LocalPlayer.Character:GetDescendants() do

												if Thing:IsA("BasePart") then

													Thing.Velocity = Vector3.new(0,0,0)

												end

											end

											task.wait(0.13)

											game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
											game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = OldPos

										end

									end

								end

							end

						end)

					else

						Reveal = false

					end

				end

			},

		}

	end,

	["2913303231"] = function ()

		local EnableConveyors = true
		local EnableBans = true

		Commands = {

			{

				Name = "Disabler",
				Type = "Button",
				Desc = "Lets you disable/enable any block BUT CONVEYORS when you click it.",
				Action = function()

					local Tool = Instance.new("Tool",game.Players.LocalPlayer.Backpack)

					Tool.Name = "Disabler"
					Tool.TextureId = "http://www.roblox.com/asset/?id=2290983952"
					Tool.ToolTip = "Disable anything (But conveyors)"
					Tool.RequiresHandle = false

					Tool.Activated:Connect(function()

						local Item = game.Players.LocalPlayer:GetMouse().Target
						local Block = Item

						if Item:HasTag("Disabled") and Item.Parent.Parent.Name == "Items" then

							Item:RemoveTag("Disabled")
							Item.Transparency = Item:GetAttribute("OldTransparency")
							Item.CanTouch = true

						elseif Item.Parent.Parent.Name == "Items" then

							Item:AddTag("Disabled")
							Item:SetAttribute("OldTransparency",Block.Transparency)
							Item.Transparency = 0.5
							Item.CanTouch = false

						end

					end)

				end,

			},

			{

				Name = "Disable Lava",
				Type = "Toggle",
				Desc = "Disables all lava blocks.",
				Action = function(Value)

					if Value == true then

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Lava") and Block:IsA("Part") then

								Block:SetAttribute("OldTransparency",Block.Transparency)
								Block.Transparency = 0.5
								Block.CanTouch = false

							end

						end

					else

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Lava") and Block:IsA("Part") then

								Block.Transparency = Block:GetAttribute("OldTransparency")
								Block.CanTouch = true

							end

						end

					end

				end,

			},

			{

				Name = "Disable Teleports",
				Type = "Toggle",
				Desc = "Disables all teleport pads.",
				Action = function(Value)

					if Value == true then

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Teleport") and Block:IsA("Part") then

								Block:SetAttribute("OldTransparency",Block.Transparency)
								Block.Transparency = 0.5
								Block.CanTouch = false

							end

						end

					else

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Teleport") and Block:IsA("Part") then

								Block.Transparency = Block:GetAttribute("OldTransparency")
								Block.CanTouch = true

							end

						end

					end

				end,

			},

			{

				Name = "Disable Fading Blocks",
				Type = "Toggle",
				Desc = "Disables all fading blocks.",
				Action = function(Value)

					if Value == true then

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Fading") and Block:IsA("Part") then

								Block:SetAttribute("OldTransparency",Block.Transparency)
								Block.Transparency = 0.5
								Block.CanTouch = false

							end

						end

					else

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Fading") and Block:IsA("Part") then

								Block.Transparency = Block:GetAttribute("OldTransparency")
								Block.CanTouch = true

							end

						end

					end

				end,

			},

			{

				Name = "Disable all but parts",
				Type = "Toggle",
				Desc = "Disables all blocks but parts",
				Action = function(Value)

					if Value == true then

						for _, Block in game.Workspace:GetDescendants() do

							if Block.Parent.Parent.Name == "Items" and not string.find(Block.Name,"Part") and Block:IsA("Part") then

								Block:SetAttribute("OldTransparency",Block.Transparency)
								Block.Transparency = 0.5
								Block.CanTouch = false

							end

						end

					else

						for _, Block in game.Workspace:GetDescendants() do

							if not string.find(Block.Name,"Part") and Block:IsA("Part") then

								Block.Transparency = Block:GetAttribute("OldTransparency")
								Block.CanTouch = true

							end

						end

					end

				end,

			},

			{

				Name = "Disable Conveyors",
				Type = "Toggle",
				Desc = "Disables all conveyors.",
				Action = function(Value)

					if Value == true then

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Conveyor") and Block:IsA("Part") then

								Block:SetAttribute("OldTransparency",Block.Transparency)
								Block.Transparency = 0.5
								local Clone = Instance.new("Part",Block)
								Clone.Transparency = 1
								Clone.Name = "CoverConveyor"
								Clone.Size = Block.Size + Vector3.new(0.1,0.1,0.1)
								Clone.Anchored = true
								Clone.Orientation = Block.Orientation
								Clone.Position = Block.Position

								spawn(function()

									EnableConveyors = false
									while not EnableConveyors do

										wait(0.01)

									end

									Clone:Destroy()

								end)

							end

						end

					else

						for _, Block in game.Workspace:GetDescendants() do

							if string.find(Block.Name,"Conveyor") and Block:IsA("Part") then

								EnableConveyors = true

								Block.Transparency = Block:GetAttribute("OldTransparency")

							end

						end

					end

				end,

			},

			{

				Name = "Disable Falling",
				Type = "Toggle",
				Desc = "Disables falling by adding a part under you.",
				Action = function(Value)

					if Value == true then

						local Part = Instance.new("Part",game.Workspace)
						Part.Name = "AntiFallPart"
						Part.Size = Vector3.new(2048,0.01,2048)
						Part.Anchored = true
						Part.CanCollide = true
						Part.Transparency = 1
						Part.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(0,3,0)

					else

						spawn(function()

							game.Workspace:FindFirstChild("AntiFallPart"):Destroy()

						end)

					end

				end,

			},

			{

				Name = "Disable Bans",
				Type = "Toggle",
				Desc = "Some hacks wont work with this on. Or conveyors.",
				Action = function(Value)

					if Value == true then

						local SavedPos = game.Players.LocalPlayer.Character.Torso.CFrame

						EnableBans = false

						spawn(function()

							repeat

								SavedPos = game.Players.LocalPlayer.Character.Torso.CFrame

								local OldPos = game.Players.LocalPlayer.Character.Torso.Position

								wait(0.05)

								if (OldPos - game.Players.LocalPlayer.Character.Torso.Position).Magnitude - 0.5 > game.Players.LocalPlayer.Character.Humanoid.WalkSpeed then

									game.Players.LocalPlayer.Character.Torso.CFrame = SavedPos

								end

							until EnableBans

						end)

					else

						EnableBans = true

					end

				end,

			},

		}

	end,

	["1962086868"] = function ()

		local Hitboxes = Instance.new("Folder",nil)

		Commands = {

			{

				Name = "Speed",
				Desc = "Set your speed to a useful amount.",
				Type = "Metre",
				Min = 16,
				Max = 50,
				Default = 16,
				Action = function(Value)

					Plr.Character.Humanoid.WalkSpeed = Value

				end,

			},

			{

				Name = "Jump Power",
				Desc = "457 is just enough to get to the top.",
				Type = "Metre",
				Min = 50,
				Max = 457,
				Default = 50,
				Action = function(Value)

					Plr.Character.Humanoid.JumpPower = Value

				end,

			},

			{

				Name = "God",
				Desc = "Remove your hitbox and makes you immortal. (Use this to use teleports)",
				Type = "Toggle",
				Action = function(On)

					if On then

						for _, Thing in Plr.Character:GetChildren() do

							if Thing.Name == "hitbox" then

								Thing.Parent = Hitboxes

							end

						end

					else

						for _, Thing in Hitboxes:GetChildren() do

							Thing.Parent = Plr.Character

						end

					end

				end,

			},

			{

				Type = "Split",

			},

			{

				Name = "To End",
				Desc = "Please use disable hitbox so the game dont kill you.",
				Type = "Button",
				Action = function()

					local Pos = workspace.tower.sections.finish.exit.carpet.Position + Vector3.new(0,5,0)

					game.TweenService:Create(Plr.Character.HumanoidRootPart,TweenInfo.new(0),{CFrame = CFrame.new(Pos)}):Play()

				end,

			},

			{

				Name = "To Beginning",
				Desc = "Please use disable hitbox so the game dont kill you.",
				Type = "Button",
				Action = function()

					local Pos = workspace.tower.sections.lobby.center.Position

					game.TweenService:Create(Plr.Character.HumanoidRootPart,TweenInfo.new(0),{CFrame = CFrame.new(Pos)}):Play()

				end,

			},

		}

	end,

	["4448566543"] = function ()

		Commands = {

			{

				Name = "Show Roles",
				Type = "Button",
				Desc = "Shows you the roles of everybody",
				Action = function(On)

					for _, Thing in game.Players:GetPlayers() do

						local Highlight = Instance.new("Highlight",Thing.Character)

						Highlight.FillTransparency = 1

						if Thing.Character:FindFirstChild("PlayerHighlightType") then

							Thing.Character:FindFirstChild("PlayerHighlightType"):Destroy()

						end

						Highlight.Name = "PlayerHighlightType"

						Highlight.OutlineColor = Color3.new(1,1,1)

						if Thing.Character:FindFirstChild("Hitbox") then

							if game.Workspace.GameBananas:FindFirstChild(Thing.Name):FindFirstChildOfClass("Model"):FindFirstChild("PlayerHighlightType") then

								game.Workspace.GameBananas:FindFirstChild(Thing.Name):FindFirstChildOfClass("Model"):FindFirstChild("PlayerHighlightType"):Destroy()

							end

							Highlight.Parent = game.Workspace.GameBananas:FindFirstChild(Thing.Name):FindFirstChildOfClass("Model")
							Highlight.OutlineColor = Color3.new(1,1,0)

						end

					end

				end,

			},

			{

				Name = "Show Puzzles",
				Type = "Button",
				Desc = "Shows you all the puzzles, and the cake pieces.",
				Action = function(On)

					for _, Thing in workspace.GameKeeper.Puzzles:GetChildren() do

						local Highlight = Instance.new("Highlight",Thing)

						Highlight.FillTransparency = 1

						if Thing:FindFirstChild("PuzzleHighlight") then

							Thing:FindFirstChild("PuzzleHighlight"):Destroy()

						end

						Highlight.Name = "PuzzleHighlight"

						Highlight.OutlineColor = Color3.new(0,0.6,1)

					end

					for _, Thing in workspace.GameKeeper.Map.Items:GetChildren() do

						if Thing.Name == "CakePlate" then

							local Highlight = Instance.new("Highlight",Thing)

							Highlight.FillTransparency = 1

							if Thing:FindFirstChild("PuzzleHighlight") then

								Thing:FindFirstChild("PuzzleHighlight"):Destroy()

							end

							Highlight.Name = "PuzzleHighlight"

							Highlight.OutlineColor = Color3.new(1,0,1)

						end

					end

				end,

			},

			{

				Name = "Show Other",
				Type = "Button",
				Desc = "Shows you everything else. Like presents, pumpkins and coins.",
				Action = function(On)

					for _, Thing in workspace.GameKeeper.Puzzles:GetChildren() do

						local Highlight = Instance.new("Highlight",Thing)

						Highlight.FillTransparency = 1

						if Thing:FindFirstChild("PuzzleHighlight") then

							Thing:FindFirstChild("PuzzleHighlight"):Destroy()

						end

						Highlight.Name = "PuzzleHighlight"

						Highlight.OutlineColor = Color3.new(0,0.6,1)

					end

					for _, Thing in workspace.GameKeeper.Map.Items:GetChildren() do

						if Thing.Name == "CakePlate" then

							local Highlight = Instance.new("Highlight",Thing)

							Highlight.FillTransparency = 1

							if Thing:FindFirstChild("PuzzleHighlight") then

								Thing:FindFirstChild("PuzzleHighlight"):Destroy()

							end

							Highlight.Name = "PuzzleHighlight"

							Highlight.OutlineColor = Color3.new(1,0,1)

						end

					end

				end,

			},

			{

				Type = "Split",

			},

			{

				Name = "Hide Loading UI",
				Type = "Button",
				Desc = "Hides the annoying loading ui.",
				Action = function(On)

					game.Players.LocalPlayer.PlayerGui.LoadingGui.Enabled = false

				end,

			},

		}

	end,

}

if Games[tostring(ID)] then

	Games[tostring(ID)]()

else

	ShowPopup("3Hax (" .. game.PlaceId .. ")","This game does not yet have a hack. Open the menu to see all the hackable games. Click to join them.","Got it")

	Commands = {

		{

			Name = "❓ LUCKY BLOCKS Battlegrounds",
			Type = "Button",
			Desc = "Id: 662417684",
			Action = function()

				local TeleportService = game:GetService("TeleportService")
				local Id = 662417684

				TeleportService:Teleport(Id, Plr)

			end,

		},

		{

			Name = "Impossible Squid Game! Glass Bridge!",
			Type = "Button",
			Desc = "Id: 13987158269 (Good for trolling noobs)",
			Action = function()

				local TeleportService = game:GetService("TeleportService")
				local Id = 13987158269

				TeleportService:Teleport(Id, Plr)

			end,

		},

		{

			Name = "☢️The 63 Infection",
			Type = "Button",
			Desc = "Id: 15980086096",
			Action = function()

				local TeleportService = game:GetService("TeleportService")
				local Id = 15980086096

				TeleportService:Teleport(Id, Plr)

			end,

		},

		{

			Name = "Obby Creator",
			Type = "Button",
			Desc = "Id: 2913303231 (Has anticheat but these hacks dont mess with them)",
			Action = function()

				local TeleportService = game:GetService("TeleportService")
				local Id = 2913303231

				TeleportService:Teleport(Id, Plr)

			end,

		},

		{

			Name = "Murder Mystery 2",
			Type = "Button",
			Desc = "Id: 142823291 (Has level 1 anticheat)",
			Action = function()

				local TeleportService = game:GetService("TeleportService")
				local Id = 142823291

				TeleportService:Teleport(Id, Plr)

			end,

		},

		{

			Name = "Furry Infection game [Furinfection]",
			Type = "Button",
			Desc = "Id: 10679239752 (Has level 2 anticheat)",
			Action = function()

				local TeleportService = game:GetService("TeleportService")
				local Id = 10679239752

				TeleportService:Teleport(Id, Plr)

			end,

		},

		{

			Name = "Tower of hell",
			Type = "Button",
			Desc = "Id: 1962086868 (Has level 3 anticheat and you can be banned but only 7 days)",
			Action = function()

				local TeleportService = game:GetService("TeleportService")
				local Id = 1962086868

				TeleportService:Teleport(Id, Plr)

			end,

		},

	}

end

-- Setup

print("Loaded " .. #Commands .. " hacks in " .. game.PlaceId .. ".")

for _, Command in Commands do

	if Command.Name then

		Command.Name = " " .. Command.Name

	end

	if Command.Type == "Button" then

		local Clone = Button:Clone()

		local Round = Instance.new("UICorner",Clone)

		Round.CornerRadius = UDim.new(0.4, 0)

		Clone.Parent = Scroll

		Clone.Text = Command.Name

		Clone.MouseEnter:Connect(function()

			Description.Visible = true
			Desc.Text = Command.Desc
			game.TweenService:Create(Clone,TweenInfo.new(0.2),{BackgroundColor3 = Color3.fromRGB(150,150,150)}):Play()

		end)

		Clone.MouseLeave:Connect(function()

			Description.Visible = false
			game.TweenService:Create(Clone,TweenInfo.new(0.2),{BackgroundColor3 = Color3.fromRGB(0,0,0)}):Play()

		end)

		Clone.MouseButton1Up:Connect(function()

			local Circle = Instance.new("ImageLabel",Clone)
			Circle.Size = UDim2.new(0,0,0,0)
			Circle.AnchorPoint = Vector2.new(0.5,0.5)
			Circle.ZIndex = 7
			Circle.BackgroundTransparency = 1
			Circle.Image = "http://www.roblox.com/asset/?id=6430908053"
			Circle.BackgroundColor3 = Color3.new(1,1,1)
			Circle.Position = UDim2.new(0, Mouse.X - Clone.AbsolutePosition.X, 0, Mouse.Y - Clone.AbsolutePosition.Y)

			local Square = Instance.new("UIAspectRatioConstraint",Circle)
			Square.DominantAxis = Enum.DominantAxis.Width

			game.TweenService:Create(Circle,TweenInfo.new(1),{Size = UDim2.new(0, Clone.AbsoluteSize.X * 10, 0, Clone.AbsoluteSize.Y * 10),ImageTransparency = 1}):Play()

			wait(1)

			Circle:Destroy()

		end)

		Clone.MouseButton1Click:Connect(function()

			Command.Action()

		end)

	end

	if Command.Type == "Select" then

		local Clone = Select:Clone()

		Clone.Parent = Scroll

		Clone.Text = Command.Name

		local Options = Command.Options
		local Pos = 1

		Clone.Option.Text = Options[Pos]

		Clone.MouseEnter:Connect(function()

			Description.Visible = true
			Desc.Text = Command.Desc

		end)

		Clone.MouseLeave:Connect(function()

			Description.Visible = false

		end)

		Clone.MouseButton1Down:Connect(function()

			game.TweenService:Create(Clone,TweenInfo.new(0.03,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{BackgroundColor3 = Color3.new(0.407843, 0.407843, 0.407843)}):Play()

		end)

		Clone.MouseButton1Up:Connect(function()

			game.TweenService:Create(Clone,TweenInfo.new(0.05),{BackgroundColor3 = Color3.new(0.211765, 0.211765, 0.211765)}):Play()

		end)

		Clone.MouseButton1Click:Connect(function()

			Pos += 1

			if Pos == #Options + 1 then

				Pos = 1

			end

			local Value1 = tonumber(#tostring(Clone.Option.Text))

			Clone.Option.MaxVisibleGraphemes = #Clone.Option.Text

			game.TweenService:Create(Clone.Option,TweenInfo.new(0.1,Enum.EasingStyle.Sine,Enum.EasingDirection.In),{MaxVisibleGraphemes = 0}):Play()

			wait(0.1)

			Clone.Option.Text = Options[Pos]

			game.TweenService:Create(Clone.Option,TweenInfo.new(0.1,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{MaxVisibleGraphemes = #Clone.Option.Text}):Play()

			Command.Action(Options[Pos])

		end)

	end

	if Command.Type == "Toggle" then

		local Clone = Toggle:Clone()

		local On = false

		local Round = Instance.new("UICorner",Clone)

		Round.CornerRadius = UDim.new(0.4, 0)

		Clone.Parent = Scroll

		Clone.Text = Command.Name

		local SelectStroke = Instance.new("UIStroke",Clone)

		SelectStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
		SelectStroke.Color = Color3.new(1,1,1)
		SelectStroke.Thickness = 0

		Clone.MouseEnter:Connect(function()

			Description.Visible = true
			Desc.Text = Command.Desc
			game.TweenService:Create(Clone,TweenInfo.new(0.2),{BackgroundColor3 = Color3.fromRGB(150,150,150)}):Play()

		end)

		Clone.MouseLeave:Connect(function()

			Description.Visible = false
			game.TweenService:Create(Clone,TweenInfo.new(0.2),{BackgroundColor3 = Color3.fromRGB(0,0,0)}):Play()

		end)

		Clone.MouseButton1Down:Connect(function()

			On = not On

			Command.Action(On)

			if not On then

				game.TweenService:Create(SelectStroke,TweenInfo.new(0.3,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{Thickness = 0}):Play()

			end

			if On then

				game.TweenService:Create(SelectStroke,TweenInfo.new(0.3,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{Thickness = 2}):Play()

			end

		end)

	end

	if Command.Type == "Split" then

		local Clone = CmdSplit:Clone()

		Clone.Parent = Scroll

	end

	if Command.Type == "Title" then

		local Clone = Text:Clone()

		Clone.Parent = Scroll

		Clone.Text = Command.Text

	end

	if Command.Type == "Metre" then

		local Down = false

		local function Convert(Scale)
			local ViewPortSize = workspace.Camera.ViewportSize
			return (ViewPortSize.X * Scale)
		end

		local Value = Command.Default

		local Clone = Metre:Clone()
		Clone.Parent = Scroll
		Clone.Text = Command.Name

		local BarValue = (Value - Command.Min) / (Command.Min - Command.Max)

		BarValue = math.clamp(-BarValue,0,1)

		Clone.Bar.Size = UDim2.new(BarValue,0,1,0)

		Clone.Editor.Text = Value

		local Mouse = game.Players.LocalPlayer:GetMouse()

		Clone.MouseEnter:Connect(function()

			Description.Visible = true
			Desc.Text = Command.Desc

		end)

		Clone.MouseLeave:Connect(function()

			Description.Visible = false

		end)

		Clone.MouseButton1Down:Connect(function()

			Down = true
			repeat

				wait(0.01)

				Value = ((Mouse.X - Clone.AbsolutePosition.X) / Clone.AbsoluteSize.X) * Command.Max

				Value = math.clamp(Value,Command.Min,Command.Max)

				local BarValue = (Value - Command.Min) / (Command.Min - Command.Max) 

				Clone.Bar.Size = UDim2.new(-BarValue,0,1,0)

			until not Down

		end)

		Clone.Editor.FocusLost:Connect(function()

			if tonumber(Clone.Editor.Text) ~= nil then

				Value = tonumber(Clone.Editor.Text)

				Clone.Editor.Text = string.sub(tostring(Value),0,#tostring(math.round(Value)) + 3)

				Command.Action(string.sub(tostring(Value),0,#tostring(math.round(Value)) + 3))

				local BarValue = (Value - Command.Min) / (Command.Min - Command.Max)

				BarValue = math.clamp(-BarValue,0,1)

				Clone.Bar.Size = UDim2.new(math.random(0,100) / 100,0,1,0)

				Clone.Bar.Size = UDim2.new(BarValue,0,1,0)

			else

				Clone.Editor.Text = Value

			end

		end)

		Clone.Bar.Changed:Connect(function(Property)

			if Property == "Size" then

				Clone.Editor.Text = string.sub(tostring(Value),0,#tostring(math.round(Value)) + 3)
				Command.Action(string.sub(tostring(Value),0,#tostring(math.round(Value)) + 3))

			end

		end)

		game:GetService("UserInputService").InputEnded:Connect(function(Input)

			if Input.UserInputType == Enum.UserInputType.MouseButton1 then

				Down = false

			end

		end)

	end

end

-- Other

game:GetService("RunService").RenderStepped:Connect(function()

	Description.Position = UDim2.new(-0.0915,Mouse.X,-0.02,Mouse.Y)

end)
